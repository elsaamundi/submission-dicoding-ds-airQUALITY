# -*- coding: utf-8 -*-
"""dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ur4TNxtwabHLkL5FtLOesYswpjfKUvss
"""

!pip install streamlit
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np


# Judul Dashboard
st.title("Dashboard Kualitas Udara Changping")

# Upload Data
uploaded_file = st.file_uploader("Upload file CSV data kualitas udara", type=["csv"])

if uploaded_file is not None:
    df = pd.read_csv(uploaded_file)

    # Pra-pemrosesan Data
    df['Date'] = pd.to_datetime(df[['year', 'month', 'day', 'hour']])
    df = df.set_index('Date')

    # Sidebar untuk Pilihan
    st.sidebar.title("Pilihan")

    # Pilihan Periode Waktu
    year_options = df.index.year.unique()
    selected_year = st.sidebar.selectbox("Pilih Tahun", year_options)

    # Filter Data Berdasarkan Tahun
    filtered_df = df[df.index.year == selected_year]


    # Visualisasi 1: PM2.5 Over Time
    st.header("Tingkat PM2.5 seiring Waktu")
    fig, ax = plt.subplots(figsize=(14, 6))
    ax.plot(filtered_df['PM2.5'])
    ax.set_xlabel("Waktu")
    ax.set_ylabel("Tingkat PM2.5")
    ax.set_title(f"Tingkat PM2.5 di Changping pada Tahun {selected_year}")
    st.pyplot(fig)


    # Visualisasi 2: Monthly Average PM2.5
    st.header("Rata-rata Bulanan PM2.5")
    monthly_pm25 = filtered_df.resample('M')['PM2.5'].mean()
    fig, ax = plt.subplots(figsize=(14, 6))
    ax.plot(monthly_pm25)
    ax.set_xlabel("Bulan")
    ax.set_ylabel("Rata-rata PM2.5")
    ax.set_title(f"Rata-rata Bulanan PM2.5 di Changping pada Tahun {selected_year}")
    st.pyplot(fig)


    # Visualisasi 3: Correlation Matrix
    st.header("Matriks Korelasi")
    numerical_features = df.select_dtypes(include=np.number)
    correlation_matrix = numerical_features.corr()
    fig, ax = plt.subplots(figsize=(12, 8))
    sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f", ax=ax)
    ax.set_title("Matriks Korelasi Parameter Kualitas Udara")
    st.pyplot(fig)


    # Visualisasi 4: Scatter Plots
    st.header("Scatter Plots")

    # Pilihan Faktor untuk Scatter Plot
    scatter_options = ['TEMP', 'PRES', 'DEWP', 'WSPM', 'RAIN']
    selected_scatter = st.sidebar.selectbox("Pilih Faktor untuk Scatter Plot", scatter_options)

    fig, ax = plt.subplots(figsize=(10, 6))
    sns.scatterplot(x=selected_scatter, y='PM2.5', data=filtered_df, ax=ax)
    ax.set_title(f"{selected_scatter} vs. PM2.5")
    st.pyplot(fig)

else:
    st.warning("Silakan upload file CSV untuk memulai.")